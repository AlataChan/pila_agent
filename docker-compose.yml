services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: pila_agent_postgres
    environment:
      POSTGRES_DB: pila_agent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pila_agent_network
    restart: unless-stopped

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: pila_agent_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pila_agent_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pila_agent_backend
    environment:
      - DEBUG=True
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pila_agent
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - pila_agent_network
    restart: unless-stopped

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pila_agent_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - pila_agent_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  pila_agent_network:
    driver: bridge 